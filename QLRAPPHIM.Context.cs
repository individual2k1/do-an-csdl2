//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanlyRapphim
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLRPCNSEntities : DbContext
    {
        public QLRPCNSEntities()
            : base("name=QLRPCNSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Cinema> Cinemas { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<Film> Films { get; set; }
        public virtual DbSet<ShowTime> ShowTimes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TypeFilm> TypeFilms { get; set; }
    
        public virtual int sp_Admin_ChangePass(string username, string pass)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_ChangePass", usernameParameter, passParameter);
        }
    
        public virtual ObjectResult<sp_Admin_CheckLogin_Result> sp_Admin_CheckLogin(string username, string pass)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_CheckLogin_Result>("sp_Admin_CheckLogin", usernameParameter, passParameter);
        }
    
        public virtual ObjectResult<sp_Admin_GetByAll_Result> sp_Admin_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_GetByAll_Result>("sp_Admin_GetByAll");
        }
    
        public virtual ObjectResult<sp_Admin_GetById_Result> sp_Admin_GetById(Nullable<int> admId)
        {
            var admIdParameter = admId.HasValue ?
                new ObjectParameter("AdmId", admId) :
                new ObjectParameter("AdmId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_GetById_Result>("sp_Admin_GetById", admIdParameter);
        }
    
        public virtual int sp_Admin_Update(Nullable<int> admId, string fullName, Nullable<System.DateTime> bod, string address, string phone, string email)
        {
            var admIdParameter = admId.HasValue ?
                new ObjectParameter("AdmId", admId) :
                new ObjectParameter("AdmId", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var bodParameter = bod.HasValue ?
                new ObjectParameter("Bod", bod) :
                new ObjectParameter("Bod", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admin_Update", admIdParameter, fullNameParameter, bodParameter, addressParameter, phoneParameter, emailParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Booking_Delete(Nullable<int> booId)
        {
            var booIdParameter = booId.HasValue ?
                new ObjectParameter("BooId", booId) :
                new ObjectParameter("BooId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Booking_Delete", booIdParameter);
        }
    
        public virtual ObjectResult<sp_Booking_GetByAll_Result> sp_Booking_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Booking_GetByAll_Result>("sp_Booking_GetByAll");
        }
    
        public virtual ObjectResult<sp_Booking_GetByCusId_Result> sp_Booking_GetByCusId(Nullable<int> cusId)
        {
            var cusIdParameter = cusId.HasValue ?
                new ObjectParameter("CusId", cusId) :
                new ObjectParameter("CusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Booking_GetByCusId_Result>("sp_Booking_GetByCusId", cusIdParameter);
        }
    
        public virtual ObjectResult<sp_Booking_GetById_Result> sp_Booking_GetById(Nullable<int> booId)
        {
            var booIdParameter = booId.HasValue ?
                new ObjectParameter("BooId", booId) :
                new ObjectParameter("BooId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Booking_GetById_Result>("sp_Booking_GetById", booIdParameter);
        }
    
        public virtual ObjectResult<sp_Booking_GetByShoId_Result> sp_Booking_GetByShoId(Nullable<int> shoId)
        {
            var shoIdParameter = shoId.HasValue ?
                new ObjectParameter("ShoId", shoId) :
                new ObjectParameter("ShoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Booking_GetByShoId_Result>("sp_Booking_GetByShoId", shoIdParameter);
        }
    
        public virtual int sp_Booking_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Booking_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Booking_Insert(Nullable<int> cusId, Nullable<int> shoId, Nullable<double> bilmoney, Nullable<int> quantity)
        {
            var cusIdParameter = cusId.HasValue ?
                new ObjectParameter("CusId", cusId) :
                new ObjectParameter("CusId", typeof(int));
    
            var shoIdParameter = shoId.HasValue ?
                new ObjectParameter("ShoId", shoId) :
                new ObjectParameter("ShoId", typeof(int));
    
            var bilmoneyParameter = bilmoney.HasValue ?
                new ObjectParameter("Bilmoney", bilmoney) :
                new ObjectParameter("Bilmoney", typeof(double));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Booking_Insert", cusIdParameter, shoIdParameter, bilmoneyParameter, quantityParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Booking_Sum(Nullable<int> shoId)
        {
            var shoIdParameter = shoId.HasValue ?
                new ObjectParameter("ShoId", shoId) :
                new ObjectParameter("ShoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Booking_Sum", shoIdParameter);
        }
    
        public virtual int sp_Booking_Update(Nullable<int> booId)
        {
            var booIdParameter = booId.HasValue ?
                new ObjectParameter("BooId", booId) :
                new ObjectParameter("BooId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Booking_Update", booIdParameter);
        }
    
        public virtual int sp_Cinema_Delete(Nullable<int> cinId)
        {
            var cinIdParameter = cinId.HasValue ?
                new ObjectParameter("CinId", cinId) :
                new ObjectParameter("CinId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Cinema_Delete", cinIdParameter);
        }
    
        public virtual ObjectResult<sp_Cinema_GetByAll_Result> sp_Cinema_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Cinema_GetByAll_Result>("sp_Cinema_GetByAll");
        }
    
        public virtual ObjectResult<sp_Cinema_GetById_Result> sp_Cinema_GetById(Nullable<int> cinId)
        {
            var cinIdParameter = cinId.HasValue ?
                new ObjectParameter("CinId", cinId) :
                new ObjectParameter("CinId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Cinema_GetById_Result>("sp_Cinema_GetById", cinIdParameter);
        }
    
        public virtual int sp_Cinema_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Cinema_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Cinema_Insert(string nameCi, string address, Nullable<int> seats, string phone, string image, Nullable<int> status)
        {
            var nameCiParameter = nameCi != null ?
                new ObjectParameter("NameCi", nameCi) :
                new ObjectParameter("NameCi", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var seatsParameter = seats.HasValue ?
                new ObjectParameter("Seats", seats) :
                new ObjectParameter("Seats", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Cinema_Insert", nameCiParameter, addressParameter, seatsParameter, phoneParameter, imageParameter, statusParameter);
        }
    
        public virtual int sp_Cinema_Update(Nullable<int> cinId, string nameCi, string address, Nullable<int> seats, string phone, string image, Nullable<int> status)
        {
            var cinIdParameter = cinId.HasValue ?
                new ObjectParameter("CinId", cinId) :
                new ObjectParameter("CinId", typeof(int));
    
            var nameCiParameter = nameCi != null ?
                new ObjectParameter("NameCi", nameCi) :
                new ObjectParameter("NameCi", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var seatsParameter = seats.HasValue ?
                new ObjectParameter("Seats", seats) :
                new ObjectParameter("Seats", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Cinema_Update", cinIdParameter, nameCiParameter, addressParameter, seatsParameter, phoneParameter, imageParameter, statusParameter);
        }
    
        public virtual int sp_Cinema_Update_Status(Nullable<int> cinId, Nullable<int> status)
        {
            var cinIdParameter = cinId.HasValue ?
                new ObjectParameter("CinId", cinId) :
                new ObjectParameter("CinId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Cinema_Update_Status", cinIdParameter, statusParameter);
        }
    
        public virtual int sp_Country_Delete(Nullable<int> couId)
        {
            var couIdParameter = couId.HasValue ?
                new ObjectParameter("CouId", couId) :
                new ObjectParameter("CouId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_Delete", couIdParameter);
        }
    
        public virtual ObjectResult<sp_Country_GetByAll_Result> sp_Country_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Country_GetByAll_Result>("sp_Country_GetByAll");
        }
    
        public virtual ObjectResult<sp_Country_GetById_Result> sp_Country_GetById(Nullable<int> couId)
        {
            var couIdParameter = couId.HasValue ?
                new ObjectParameter("CouId", couId) :
                new ObjectParameter("CouId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Country_GetById_Result>("sp_Country_GetById", couIdParameter);
        }
    
        public virtual int sp_Country_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Country_Insert(string nameCo, Nullable<int> status)
        {
            var nameCoParameter = nameCo != null ?
                new ObjectParameter("NameCo", nameCo) :
                new ObjectParameter("NameCo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_Insert", nameCoParameter, statusParameter);
        }
    
        public virtual int sp_Country_Update(Nullable<int> couId, string nameCo, Nullable<int> status)
        {
            var couIdParameter = couId.HasValue ?
                new ObjectParameter("CouId", couId) :
                new ObjectParameter("CouId", typeof(int));
    
            var nameCoParameter = nameCo != null ?
                new ObjectParameter("NameCo", nameCo) :
                new ObjectParameter("NameCo", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_Update", couIdParameter, nameCoParameter, statusParameter);
        }
    
        public virtual int sp_Country_Update_Status(Nullable<int> couId, Nullable<int> status)
        {
            var couIdParameter = couId.HasValue ?
                new ObjectParameter("CouId", couId) :
                new ObjectParameter("CouId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Country_Update_Status", couIdParameter, statusParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Customer_ChangePass(string username, string pass)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_ChangePass", usernameParameter, passParameter);
        }
    
        public virtual ObjectResult<sp_Customer_CheckLogin_Result> sp_Customer_CheckLogin(string username, string pass)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_CheckLogin_Result>("sp_Customer_CheckLogin", usernameParameter, passParameter);
        }
    
        public virtual int sp_Customer_Delete(Nullable<int> cusId)
        {
            var cusIdParameter = cusId.HasValue ?
                new ObjectParameter("CusId", cusId) :
                new ObjectParameter("CusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Delete", cusIdParameter);
        }
    
        public virtual ObjectResult<sp_Customer_GetByAll_Result> sp_Customer_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_GetByAll_Result>("sp_Customer_GetByAll");
        }
    
        public virtual ObjectResult<sp_Customer_GetById_Result> sp_Customer_GetById(Nullable<int> cusId)
        {
            var cusIdParameter = cusId.HasValue ?
                new ObjectParameter("CusId", cusId) :
                new ObjectParameter("CusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_GetById_Result>("sp_Customer_GetById", cusIdParameter);
        }
    
        public virtual int sp_Customer_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Customer_Insert(string username, string password, Nullable<int> creditCard, string fullName, Nullable<System.DateTime> bod, string address, string phone, string email, string avata, Nullable<int> status)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var creditCardParameter = creditCard.HasValue ?
                new ObjectParameter("CreditCard", creditCard) :
                new ObjectParameter("CreditCard", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var bodParameter = bod.HasValue ?
                new ObjectParameter("Bod", bod) :
                new ObjectParameter("Bod", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var avataParameter = avata != null ?
                new ObjectParameter("Avata", avata) :
                new ObjectParameter("Avata", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Insert", usernameParameter, passwordParameter, creditCardParameter, fullNameParameter, bodParameter, addressParameter, phoneParameter, emailParameter, avataParameter, statusParameter);
        }
    
        public virtual int sp_Customer_Update(Nullable<int> cusId, string username, Nullable<int> creditCard, string fullName, Nullable<System.DateTime> bod, string address, string phone, string email, string avata, Nullable<int> status)
        {
            var cusIdParameter = cusId.HasValue ?
                new ObjectParameter("CusId", cusId) :
                new ObjectParameter("CusId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var creditCardParameter = creditCard.HasValue ?
                new ObjectParameter("CreditCard", creditCard) :
                new ObjectParameter("CreditCard", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var bodParameter = bod.HasValue ?
                new ObjectParameter("Bod", bod) :
                new ObjectParameter("Bod", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var avataParameter = avata != null ?
                new ObjectParameter("Avata", avata) :
                new ObjectParameter("Avata", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Update", cusIdParameter, usernameParameter, creditCardParameter, fullNameParameter, bodParameter, addressParameter, phoneParameter, emailParameter, avataParameter, statusParameter);
        }
    
        public virtual int sp_Customer_Update_Status(Nullable<int> cusId, Nullable<int> status)
        {
            var cusIdParameter = cusId.HasValue ?
                new ObjectParameter("CusId", cusId) :
                new ObjectParameter("CusId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Customer_Update_Status", cusIdParameter, statusParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_Feedback_Delete(Nullable<int> feeId)
        {
            var feeIdParameter = feeId.HasValue ?
                new ObjectParameter("FeeId", feeId) :
                new ObjectParameter("FeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Feedback_Delete", feeIdParameter);
        }
    
        public virtual ObjectResult<sp_Feedback_GetByAll_Result> sp_Feedback_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Feedback_GetByAll_Result>("sp_Feedback_GetByAll");
        }
    
        public virtual ObjectResult<sp_Feedback_GetByFilId_Result> sp_Feedback_GetByFilId(Nullable<int> filId)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Feedback_GetByFilId_Result>("sp_Feedback_GetByFilId", filIdParameter);
        }
    
        public virtual ObjectResult<sp_Feedback_GetById_Result> sp_Feedback_GetById(Nullable<int> feeId)
        {
            var feeIdParameter = feeId.HasValue ?
                new ObjectParameter("FeeId", feeId) :
                new ObjectParameter("FeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Feedback_GetById_Result>("sp_Feedback_GetById", feeIdParameter);
        }
    
        public virtual int sp_Feedback_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Feedback_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Feedback_Insert(Nullable<int> filId, string avata, string fullName, string comment)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            var avataParameter = avata != null ?
                new ObjectParameter("Avata", avata) :
                new ObjectParameter("Avata", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Feedback_Insert", filIdParameter, avataParameter, fullNameParameter, commentParameter);
        }
    
        public virtual int sp_Feedback_Update(Nullable<int> feeId, Nullable<int> filId, string avata, string fullName, string comment)
        {
            var feeIdParameter = feeId.HasValue ?
                new ObjectParameter("FeeId", feeId) :
                new ObjectParameter("FeeId", typeof(int));
    
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            var avataParameter = avata != null ?
                new ObjectParameter("Avata", avata) :
                new ObjectParameter("Avata", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Feedback_Update", feeIdParameter, filIdParameter, avataParameter, fullNameParameter, commentParameter);
        }
    
        public virtual int sp_Film_Delete(Nullable<int> filId)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Film_Delete", filIdParameter);
        }
    
        public virtual ObjectResult<sp_Film_GetByAll_Result> sp_Film_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Film_GetByAll_Result>("sp_Film_GetByAll");
        }
    
        public virtual ObjectResult<sp_Film_GetByCouId_Result> sp_Film_GetByCouId(Nullable<int> couId)
        {
            var couIdParameter = couId.HasValue ?
                new ObjectParameter("CouId", couId) :
                new ObjectParameter("CouId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Film_GetByCouId_Result>("sp_Film_GetByCouId", couIdParameter);
        }
    
        public virtual ObjectResult<sp_Film_GetById_Result> sp_Film_GetById(Nullable<int> filId)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Film_GetById_Result>("sp_Film_GetById", filIdParameter);
        }
    
        public virtual int sp_Film_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Film_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual ObjectResult<sp_Film_GetByTypId_Result> sp_Film_GetByTypId(Nullable<int> typId)
        {
            var typIdParameter = typId.HasValue ?
                new ObjectParameter("TypId", typId) :
                new ObjectParameter("TypId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Film_GetByTypId_Result>("sp_Film_GetByTypId", typIdParameter);
        }
    
        public virtual int sp_Film_Insert(Nullable<int> typId, Nullable<int> couId, string nameF, string director, string actor, Nullable<int> duration, string description, string detail, string picture, string pictureBig, Nullable<int> status)
        {
            var typIdParameter = typId.HasValue ?
                new ObjectParameter("TypId", typId) :
                new ObjectParameter("TypId", typeof(int));
    
            var couIdParameter = couId.HasValue ?
                new ObjectParameter("CouId", couId) :
                new ObjectParameter("CouId", typeof(int));
    
            var nameFParameter = nameF != null ?
                new ObjectParameter("NameF", nameF) :
                new ObjectParameter("NameF", typeof(string));
    
            var directorParameter = director != null ?
                new ObjectParameter("Director", director) :
                new ObjectParameter("Director", typeof(string));
    
            var actorParameter = actor != null ?
                new ObjectParameter("Actor", actor) :
                new ObjectParameter("Actor", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var pictureBigParameter = pictureBig != null ?
                new ObjectParameter("PictureBig", pictureBig) :
                new ObjectParameter("PictureBig", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Film_Insert", typIdParameter, couIdParameter, nameFParameter, directorParameter, actorParameter, durationParameter, descriptionParameter, detailParameter, pictureParameter, pictureBigParameter, statusParameter);
        }
    
        public virtual int sp_Film_Update(Nullable<int> filId, Nullable<int> typId, Nullable<int> couId, string nameF, string director, string actor, Nullable<int> duration, string description, string detail, string picture, string pictureBig, Nullable<int> status)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            var typIdParameter = typId.HasValue ?
                new ObjectParameter("TypId", typId) :
                new ObjectParameter("TypId", typeof(int));
    
            var couIdParameter = couId.HasValue ?
                new ObjectParameter("CouId", couId) :
                new ObjectParameter("CouId", typeof(int));
    
            var nameFParameter = nameF != null ?
                new ObjectParameter("NameF", nameF) :
                new ObjectParameter("NameF", typeof(string));
    
            var directorParameter = director != null ?
                new ObjectParameter("Director", director) :
                new ObjectParameter("Director", typeof(string));
    
            var actorParameter = actor != null ?
                new ObjectParameter("Actor", actor) :
                new ObjectParameter("Actor", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(string));
    
            var pictureBigParameter = pictureBig != null ?
                new ObjectParameter("PictureBig", pictureBig) :
                new ObjectParameter("PictureBig", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Film_Update", filIdParameter, typIdParameter, couIdParameter, nameFParameter, directorParameter, actorParameter, durationParameter, descriptionParameter, detailParameter, pictureParameter, pictureBigParameter, statusParameter);
        }
    
        public virtual int sp_Film_Update_Status(Nullable<int> filId, Nullable<int> status)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Film_Update_Status", filIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_ShowTimes_Delete(Nullable<int> shoId)
        {
            var shoIdParameter = shoId.HasValue ?
                new ObjectParameter("ShoId", shoId) :
                new ObjectParameter("ShoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_Delete", shoIdParameter);
        }
    
        public virtual ObjectResult<sp_ShowTimes_GetByAll_Result> sp_ShowTimes_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShowTimes_GetByAll_Result>("sp_ShowTimes_GetByAll");
        }
    
        public virtual ObjectResult<sp_ShowTimes_GetByCinId_Result> sp_ShowTimes_GetByCinId(Nullable<int> cinId)
        {
            var cinIdParameter = cinId.HasValue ?
                new ObjectParameter("CinId", cinId) :
                new ObjectParameter("CinId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShowTimes_GetByCinId_Result>("sp_ShowTimes_GetByCinId", cinIdParameter);
        }
    
        public virtual ObjectResult<sp_ShowTimes_GetByFilId_Result> sp_ShowTimes_GetByFilId(Nullable<int> filId)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShowTimes_GetByFilId_Result>("sp_ShowTimes_GetByFilId", filIdParameter);
        }
    
        public virtual ObjectResult<sp_ShowTimes_GetById_Result> sp_ShowTimes_GetById(Nullable<int> shoId)
        {
            var shoIdParameter = shoId.HasValue ?
                new ObjectParameter("ShoId", shoId) :
                new ObjectParameter("ShoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ShowTimes_GetById_Result>("sp_ShowTimes_GetById", shoIdParameter);
        }
    
        public virtual int sp_ShowTimes_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ShowTimes_GetByTop1(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_GetByTop1", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ShowTimes_GetByTop2(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_GetByTop2", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ShowTimes_Insert(Nullable<int> filId, Nullable<int> cinId, Nullable<System.DateTime> showTime, Nullable<System.TimeSpan> time, Nullable<double> price, Nullable<int> status)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            var cinIdParameter = cinId.HasValue ?
                new ObjectParameter("CinId", cinId) :
                new ObjectParameter("CinId", typeof(int));
    
            var showTimeParameter = showTime.HasValue ?
                new ObjectParameter("ShowTime", showTime) :
                new ObjectParameter("ShowTime", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_Insert", filIdParameter, cinIdParameter, showTimeParameter, timeParameter, priceParameter, statusParameter);
        }
    
        public virtual int sp_ShowTimes_Update(Nullable<int> shoId, Nullable<int> filId, Nullable<int> cinId, Nullable<System.DateTime> showTime, Nullable<System.TimeSpan> time, Nullable<double> price, Nullable<int> status)
        {
            var shoIdParameter = shoId.HasValue ?
                new ObjectParameter("ShoId", shoId) :
                new ObjectParameter("ShoId", typeof(int));
    
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            var cinIdParameter = cinId.HasValue ?
                new ObjectParameter("CinId", cinId) :
                new ObjectParameter("CinId", typeof(int));
    
            var showTimeParameter = showTime.HasValue ?
                new ObjectParameter("ShowTime", showTime) :
                new ObjectParameter("ShowTime", typeof(System.DateTime));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_Update", shoIdParameter, filIdParameter, cinIdParameter, showTimeParameter, timeParameter, priceParameter, statusParameter);
        }
    
        public virtual int sp_ShowTimes_Update_Price(Nullable<int> shoId, Nullable<double> price)
        {
            var shoIdParameter = shoId.HasValue ?
                new ObjectParameter("ShoId", shoId) :
                new ObjectParameter("ShoId", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_Update_Price", shoIdParameter, priceParameter);
        }
    
        public virtual int sp_ShowTimes_Update_Status(Nullable<int> shoId, Nullable<int> status)
        {
            var shoIdParameter = shoId.HasValue ?
                new ObjectParameter("ShoId", shoId) :
                new ObjectParameter("ShoId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_Update_Status", shoIdParameter, statusParameter);
        }
    
        public virtual int sp_ShowTimes_Update_View(Nullable<int> filId)
        {
            var filIdParameter = filId.HasValue ?
                new ObjectParameter("FilId", filId) :
                new ObjectParameter("FilId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ShowTimes_Update_View", filIdParameter);
        }
    
        public virtual int sp_TypeFilm_Delete(Nullable<int> typId)
        {
            var typIdParameter = typId.HasValue ?
                new ObjectParameter("TypId", typId) :
                new ObjectParameter("TypId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TypeFilm_Delete", typIdParameter);
        }
    
        public virtual ObjectResult<sp_TypeFilm_GetByAll_Result> sp_TypeFilm_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TypeFilm_GetByAll_Result>("sp_TypeFilm_GetByAll");
        }
    
        public virtual ObjectResult<sp_TypeFilm_GetById_Result> sp_TypeFilm_GetById(Nullable<int> typId)
        {
            var typIdParameter = typId.HasValue ?
                new ObjectParameter("TypId", typId) :
                new ObjectParameter("TypId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TypeFilm_GetById_Result>("sp_TypeFilm_GetById", typIdParameter);
        }
    
        public virtual int sp_TypeFilm_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TypeFilm_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_TypeFilm_Insert(string nameT, Nullable<int> status)
        {
            var nameTParameter = nameT != null ?
                new ObjectParameter("NameT", nameT) :
                new ObjectParameter("NameT", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TypeFilm_Insert", nameTParameter, statusParameter);
        }
    
        public virtual int sp_TypeFilm_Update(Nullable<int> typId, string nameT, Nullable<int> status)
        {
            var typIdParameter = typId.HasValue ?
                new ObjectParameter("TypId", typId) :
                new ObjectParameter("TypId", typeof(int));
    
            var nameTParameter = nameT != null ?
                new ObjectParameter("NameT", nameT) :
                new ObjectParameter("NameT", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TypeFilm_Update", typIdParameter, nameTParameter, statusParameter);
        }
    
        public virtual int sp_TypeFilm_Update_Status(Nullable<int> typId, Nullable<int> status)
        {
            var typIdParameter = typId.HasValue ?
                new ObjectParameter("TypId", typId) :
                new ObjectParameter("TypId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TypeFilm_Update_Status", typIdParameter, statusParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Customer> sp_Customer_GetByAlls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer>("sp_Customer_GetByAlls");
        }
    
        public virtual ObjectResult<Customer> sp_Customer_GetByAlls(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer>("sp_Customer_GetByAlls", mergeOption);
        }
    
        public virtual ObjectResult<Customer> get_KH(Nullable<int> cusId)
        {
            var cusIdParameter = cusId.HasValue ?
                new ObjectParameter("CusId", cusId) :
                new ObjectParameter("CusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer>("get_KH", cusIdParameter);
        }
    
        public virtual ObjectResult<Customer> get_KH(Nullable<int> cusId, MergeOption mergeOption)
        {
            var cusIdParameter = cusId.HasValue ?
                new ObjectParameter("CusId", cusId) :
                new ObjectParameter("CusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer>("get_KH", mergeOption, cusIdParameter);
        }
    }
}
